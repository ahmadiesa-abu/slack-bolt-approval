import json
import requests

from cloudify import ctx, context
from cloudify.state import ctx_parameters as inputs

slack_token = inputs['slack_token']
slack_channel = inputs['channel_name']

def post_message_to_slack(text, blocks = None):
    return requests.post('https://slack.com/api/chat.postMessage', {
        'token': slack_token,
        'channel': slack_channel,
        'text': text,
        'blocks': json.dumps(blocks) if blocks else None
    }).json()


slack_info = "Deployment Approval Notification"
deployment_id = ctx.deployment.id
slack_blocks = [
		{
			"type": "header",
			"text": {
				"type": "plain_text",
				"text": slack_info,
				"emoji": True
			}
		},
		{
			"type": "section",
			"fields": [
				{
					"type": "mrkdwn",
					"text": deployment_id
				}
			]
		},
		{
			"type": "section",
			"fields": [
				{
					"type": "mrkdwn",
					"text": "*Generated by:* Cloudify"
				}
			]
		},
		{
			"type": "actions",
			"elements": [
				{
                    "action_id": "approve_req",
					"type": "button",
					"text": {
						"type": "plain_text",
						"emoji": True,
						"text": "Approve"
					},
					"style": "primary",
					"value": "approve_button"
				},
				{
                    "action_id": "reject_req",
					"type": "button",
					"text": {
						"type": "plain_text",
						"emoji": True,
						"text": "Reject"
					},
					"style": "danger",
					"value": "reject_button"
				}
			]
		}
	]

instance = None
if ctx.type == context.RELATIONSHIP_INSTANCE:
    instance = ctx.target.instance
else:
    instance = ctx.instance

instance.runtime_properties['response'] = post_message_to_slack(slack_info, slack_blocks)
